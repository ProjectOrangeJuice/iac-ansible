# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# https://www.nginx.com/resources/wiki/start/
# https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/
# https://wiki.debian.org/Nginx/DirectoryStructure
#
# In most cases, administrators will remove this file from sites-enabled/ and
# leave it as reference inside of sites-available where it will continue to be
# updated by the nginx packaging team.
#
# This file will automatically load configuration files provided by other
# applications, such as Drupal or Wordpress. These applications will be made
# available underneath a path with that package name, such as /drupal8.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

# Default server configuration
#

map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
}


server {
    listen 80 default_server;
    listen [::]:80 default_server;
    server_name _;
     return 444;
}

resolver 192.168.18.1 valid=30s;

upstream backend {
   server homeassistant.localdomain;
   server gateway.localdomain;
   server nextcloud.localdomain;
   keepalive 10;
}

limit_req_zone $binary_remote_addr zone=mylimit:5m rate=50r/s;
limit_req_zone $binary_remote_addr zone=highlimit:5m rate=250r/s;
limit_conn_zone $binary_remote_addr zone=limitconnbyaddr:20m;


server {
    server_name bit.{{ domain_name }};
    client_max_body_size 1m;
    limit_req zone=mylimit burst=20;
    auth_request /gateway;
        location = /gateway {
        # This address is where the gateway will be listening on
        proxy_pass http://gateway.localdomain:9090/access;
        proxy_set_header Host $host;
        proxy_pass_request_body off; # no need to send the POST body
        proxy_set_header Content-Length "";
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    error_page 401 = @error401;
    location @error401 {
        return 404;
    }

    location  / {
        proxy_pass         http://192.168.18.100;
               proxy_http_version 1.1;
    # Set headers for proxying WebSocket
    proxy_set_header   Upgrade $http_upgrade;
    proxy_set_header   Connection "upgrade";
    proxy_redirect     http:// $scheme://;

    # Set proxy headers
    proxy_set_header   X-Real-IP $remote_addr;
    proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header   X-Forwarded-Proto http;

    # The proxy must preserve the host because screego verifies it with the origin
    # for WebSocket connections
    proxy_set_header   Host $http_host;
    }


    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/bit.{{ domain_name }}/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/bit.{{ domain_name }}/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
}



server {
  server_name unlock.{{ domain_name }};
  limit_req zone=mylimit;
        location  / {

            proxy_pass         http://gateway.localdomain:9090/unlock;
            proxy_redirect     off;
            proxy_set_header   Host $host;
            proxy_set_header   X-Real-IP $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Host $server_name;

        }


    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/unlock.{{ domain_name }}/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/unlock.{{ domain_name }}/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot


}


server {
    server_name home.{{ domain_name }};
 
    
        location = /gateway {
        # This address is where the gateway will be listening on
        proxy_pass http://gateway.localdomain:9090/access;
        proxy_pass_request_body off; # no need to send the POST body
        proxy_set_header Host $host;
        proxy_set_header Content-Length "";
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    error_page 401 = @error401;
    location @error401 {
        return 404;
    }

    location  /auth/login_flow {
        limit_req zone=mylimit burst=5;
        auth_request /gateway;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_read_timeout 86400;
        proxy_pass         http://homeassistant.localdomain:8123;
        proxy_redirect     off;
        proxy_set_header   Host $host;
        proxy_set_header   X-Real-IP $remote_addr;
        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Host $server_name;
    }

    location  / {
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_read_timeout 86400;
        proxy_pass         http://homeassistant.localdomain:8123;
        proxy_redirect     off;
        proxy_set_header   Host $host;
        proxy_set_header   X-Real-IP $remote_addr;
        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Host $server_name;
    }


    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/home.{{ domain_name }}/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/home.{{ domain_name }}/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}

server {
    server_name cloud.{{ domain_name }};
    limit_req zone=highlimit burst=20;
    limit_conn   limitconnbyaddr  50;


    gzip on;
    gzip_disable "msie6"; # Disable for old versions of Internet Explorer

# MIME types to compress
gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

   # Compression level: a number between 1 (least compression) and 9 (most compression)
   gzip_comp_level 9;
   auth_request /gateway;
        location = /gateway {
        client_max_body_size 0;
        # This address is where the gateway will be listening on
        proxy_pass http://gateway.localdomain:9090/access;
        proxy_set_header Host $host;
        proxy_pass_request_body off; # no need to send the POST body
        proxy_set_header Content-Length "";
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
    }
    error_page 401 = @error401;
    location @error401 {
        return 404;
    }

   
    
    location / {
        proxy_pass http://nextcloud.localdomain:11000$request_uri;

        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_set_header X-Forwarded-Scheme $scheme;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Accept-Encoding "";
        proxy_set_header Host $host;
    
        client_body_buffer_size 500M;
        proxy_read_timeout 86400s;
        client_max_body_size 0;

        # Websocket
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
    }


    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/cloud.{{ domain_name }}/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/cloud.{{ domain_name }}/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}


server {
    server_name data.{{ domain_name }};
    limit_req zone=highlimit burst=20;
    limit_conn   limitconnbyaddr  50;


    gzip on;
    gzip_disable "msie6"; # Disable for old versions of Internet Explorer

# MIME types to compress
gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

   # Compression level: a number between 1 (least compression) and 9 (most compression)
   gzip_comp_level 9;
   auth_request /gateway;
        location = /gateway {
        client_max_body_size 0;
        # This address is where the gateway will be listening on
        proxy_pass http://gateway.localdomain:9090/access;
        proxy_set_header Host $host;
        proxy_pass_request_body off; # no need to send the POST body
        proxy_set_header Content-Length "";
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
    }
    error_page 401 = @error401;
    location @error401 {
        return 404;
    }

   
    
    location / {
        proxy_pass http://data.localdomain:11000$request_uri;

        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_set_header X-Forwarded-Scheme $scheme;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Accept-Encoding "";
        proxy_set_header Host $host;
    
        client_body_buffer_size 500M;
        proxy_read_timeout 86400s;
        client_max_body_size 0;

        # Websocket
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
    }


    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/data.{{ domain_name }}/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/data.{{ domain_name }}/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}


server {
    if ($host = home.{{ domain_name }}) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    server_name home.{{ domain_name }};
    listen 80;
    return 404; # managed by Certbot


}

server {
    if ($host = bit.{{ domain_name }}) {
        return 301 https://$host$request_uri;
    } # managed by Certbot

  server_name bit.{{ domain_name }};
    listen 80;
    return 404; # managed by Certbot
  

}



server {
    if ($host = cloud.{{ domain_name }}) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    server_name cloud.{{ domain_name }};
    listen 80;
    return 404; # managed by Certbot
}

server {
    if ($host = data.{{ domain_name }}) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    server_name data.{{ domain_name }};
    listen 80;
    return 404; # managed by Certbot
}