upstream backend {
    server 192.168.2.15:443 max_fails=0 fail_timeout=0;  
}

# Domain to backend mapping
map $host $upstream_backend {
    gemini.{{ domain_name }} https://backend;
}



# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# https://www.nginx.com/resources/wiki/start/
# https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/
# https://wiki.debian.org/Nginx/DirectoryStructure
#
# In most cases, administrators will remove this file from sites-enabled/ and
# leave it as reference inside of sites-available where it will continue to be
# updated by the nginx packaging team.
#
# This file will automatically load configuration files provided by other
# applications, such as Drupal or Wordpress. These applications will be made
# available underneath a path with that package name, such as /drupal8.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

# Default server configuration
#

map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
}


server {
    listen 80 default_server;
    listen [::]:80 default_server;
    server_name _;
     return 444;
}

limit_req_zone $binary_remote_addr zone=mylimit:5m rate=50r/s;
limit_req_zone $binary_remote_addr zone=highlimit:5m rate=250r/s;
limit_conn_zone $binary_remote_addr zone=limitconnbyaddr:20m;

server {
    server_name gemini.{{ domain_name }};
    limit_req zone=mylimit burst=20;
   
 location / {
        proxy_connect_timeout 1s;  # Short initial connection timeout
        proxy_next_upstream error timeout; # Retry on errors and timeouts
        proxy_pass $upstream_backend;  
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; 
    }

    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/gemini.{{ domain_name }}/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/gemini.{{ domain_name }}/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
}




server {
    if ($host = gemini.{{ domain_name }}) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    server_name gemini.{{ domain_name }};
    listen 80;
    return 404; # managed by Certbot
}